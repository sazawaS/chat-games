<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Document</title>
  <style>
    /* Reset some default styles */
    body, h1, ul {
        margin: 0;
        padding: 0;
    }

    /* Body background gradient */
    body {
      background-color: rgb(44, 44, 44); /* Semi-transparent dark background */
      font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif, Arial, sans-serif;
    }

    /* Styling the navbar */
    .navbar {
        background-color: rgb(51, 51, 51); /* Semi-transparent dark background */
        color: white; /* White text color */
        position: fixed; /* Fix the navbar at the top */
        top: 0; /* Align to the top */
        width: 100%; /* Full width */
        z-index: 1000; /* Ensure it's above other elements */
    }

    .navbar ul {
        list-style-type: none; /* Remove bullets from the list */
        justify-content: space-between;
        display: flex; /* Use flexbox for horizontal layout */
        align-items: center; /* Center items vertically */
        padding: 15px; /* Add some padding */
        max-height: 30px;
    }


    .navbar h1 {
        font-size: 24px; /* Font size for the title */
    }

    /* Styling the links */
    .navbar a {
        color: white; /* White text for links */
        text-decoration: none; /* Remove underline */
        padding: 10px 15px; /* Add padding around links */
        transition: background-color 0.3s ease; /* Smooth transition for background color */
    }

    /* Hover effect for links */
    .navbar a:hover {
        background-color: rgba(255, 255, 255, 0.2); /* Light background on hover */
    }

    /* Container styling */
    .container {
      position: relative;
      top:70px;
      width:60%;
      padding: 20px; /* Add padding */
      background-color: rgb(53, 53, 53); /* Light background */
    }

    /* Fixed message section styling */
    .container {
        margin: 0 auto;
        background-color: rgb(53, 53, 53); /* Light background */
        align-items:center;
        border: 1px solid #7a7a7a; /* Light border */
        border-radius: 5px; /* Rounded corners */
        padding: 15px; /* Padding inside the container */
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); /* Shadow effect */
        word-wrap: break-word;

    }


    h2, .info{
      color:white;
      margin-left: 220px;
    }

    h2 {
      font-weight: 500;
      font-size:1.2rem;
    }

    .info {
      color:rgb(220, 220, 220);
    }

    .pfp {
      position:absolute;
      width:200px;
      height: 200px;
      border-radius: 50%;
    }

    input {
      display:none;
      width:200px;
      height:200px;
    }

    label[id="changePfp"] {
      background-color: rgb(31, 31, 31);
      font-size: small;
      padding:10px 20px;
      border-radius:5px;
      color: rgb(255,255,255)
    }



  </style>
</head>
<body>
  <nav class="navbar">
    <ul>
      <h1>Chat Games</h1>
      <li class="middle"><a href="/">Home</a></li>
      <% if(locals.myName) { %>
        <p> Logged in: <a href="/users/me"> <%= locals.myName %> </a> <a href="/logout">Logout</a> </p>
      <% } else {%>
        <p> Not logged in. %> <a href="/register">Register</a> </p>
      <% } %>
    </ul>
  </nav>

  <nav class="container">

    <nav class="information">
      <img class="pfp" src=<%= user.pfp %>>
      <label><h2>Name:</h2> <p class="info" id="username"><%= user.username %></p> </label>
      <label><h2>Email:</h2> <p class="info"><%= user.email %></p> </label>
      <label><h2>Join Date:</h2> <p class="info"><%= user.creationDate %></p> </label>
      <label id="changePfp" for="input">Change your profile picture!</label>
      <input id='input' accept=".jpg, .jpeg, .png, .gif" type="file">
    </nav>
    
    <script>

      document.getElementById("input").addEventListener("input", async (event) => {
        const file = event.target.files[0];
        var data = new FormData()
        data.append("file", file)
        data.append("username", document.getElementById('username').innerHTML)

        try {
          const response = await fetch("/users/me", {
            method: "POST",
            body: data,
          })

          console.log(response)

        } catch(err) {
          console.log('failed POST ', err)
        }

      })
    </script>

  </nav>

</body>
</html>